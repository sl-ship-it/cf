openapi: 3.0.0
info:
  title: Currency Fair Code Challenge
  version: 0.1.0
paths:
  /order:
    post:
      requestBody:
        description: Order Creation Payload
        content: 
          'application/json':
            schema:
              $ref: '#/components/schemas/Order'
          
      responses:
        '201':
          description: The order created successfully
        default:
          description: error payload
          content:
            'text/html':
              schema:
                $ref: '#/components/schemas/Error'
    get:
      responses:
        '200':
          description: 'list of order payloads'
          content: 
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        default:
          description: error payload
          content:
            'text/html':
              schema:
                $ref: '#/components/schemas/Error'
          
                  
  /order/{orderId}:
    get:
      parameters:
        - name: orderId
          in: path
          required: true
          description: the user identifier, as userId 
          schema:
            type: string
      responses:
        '200':
          description: 'list of order payloads'
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/Order'
        default:
          description: error payload
          content:
            'text/html':
              schema:
                $ref: '#/components/schemas/Error'
        
components:
  schemas:
    Order:
      type: object
      properties:
        orderId:
          type: string
          format: uuid
        userId:
          type: string
          example: '123456'
        currencyFrom:
          type: string
          example: 'EUR'
        currencyTo:
          type: string
          example: 'USD'
        amountSell:
          type: number
          example: 1000
        amountBuy:
          type: number
          example: 747.10
        rate:
          type: number
          example: 0.7471
        timePlaced:
          type: string
          example: '24-JAN-18 10:27:44'
        originatingCountry:
          type: string
          example: 'FR'
    Error:
      type: object
      properties:
        reasonText:
          type: string
        